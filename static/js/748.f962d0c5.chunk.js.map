{"version":3,"file":"static/js/748.f962d0c5.chunk.js","mappings":"sOAEaA,EAAOC,EAAAA,GAAAA,KAAH,qEAIJC,EAAQD,EAAAA,GAAAA,MAAH,qJAQLE,EAASF,EAAAA,GAAAA,OAAH,kUAgBNG,EAAOH,EAAAA,GAAAA,GAAH,iEAIJI,EAAOJ,EAAAA,GAAAA,GAAH,kGAOJK,GAAaL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,+D,oCCIvB,EAzCmB,WACjB,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCL,EAAAA,EAAAA,UAAS,IAA7C,eAAOM,EAAP,KAAmBC,EAAnB,KACMC,EAAQJ,EAAaK,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAoBL,GAAOM,MAAK,SAACC,GAAD,OAAOb,EAAUa,EAAIC,QAArB,GACjC,GAAE,CAACR,IAaF,OACI,iCACA,UAAChB,EAAD,CAAMyB,SARS,SAAAC,GACnBA,EAAEC,iBACFd,EAAgB,CAAEG,MAAOU,EAAEE,cAAcC,SAASC,OAAOC,QACzDL,EAAEE,cAAcI,OACjB,EAIK,WACA,SAAC9B,EAAD,CAAO+B,KAAK,OAAOF,MAAOjB,EAAYoB,KAAK,SAASC,SAdrC,SAACT,GACpB,IAAMK,EAAQL,EAAEU,OAAOL,MACvBhB,EAAcgB,EACf,KAYK,SAAC5B,EAAD,CAAQ8B,KAAK,SAASI,UAAWvB,EAAjC,wBAEA,SAACV,EAAD,UAAOK,EAAO6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAChB,SAACnC,EAAD,WACE,SAACC,EAAD,CAAYmC,GAAE,UAAKF,GAAMG,MAAO,CAACC,KAAMzB,GAAvC,SACGsB,KAFMD,EADK,QASzB,C,+LC3CKK,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,mBAAoB,CAC/CC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAe7B,EAAtB,+CAAO,OAAP,oBAAO,WAAmCL,GAAnC,wFACkB8B,EAAAA,EAAAA,GAAM,sBAAD,OAAuB9B,GAAS,CAC1D+B,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OAAUP,GAAM,CAC1CQ,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAQA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OAAUP,EAAV,aAAyB,CACnDQ,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKG,MANhB,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCf,GAAjC,wFACkBO,EAAAA,EAAAA,GAAM,SAAD,OAAUP,EAAV,aAAyB,CACnDQ,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEApCPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nexport const Form = styled.form`\npadding: 30px 40px;\ndisplay:flex;\ngap: 5px;`\nexport const Input = styled.input`\nwidth: 260px;\nheight: 33px;\nborder: 2px solid black;\nborder-radius: 4px;\n:hover{\n    border: 2px solid rgb(255,69,0);\n}`\nexport const Button = styled.button`\ntext-align: center;\nletter-spacing: 0.03em;\npadding: 2px 8px;\ncolor: white;\nfont-weight: 400;\nfont-size: 20px;\nline-height: 32px;\nbackground-color: black;\nborder: 2px solid black;\nborder-radius: 4px;\n:hover{\n    border: 2px solid rgb(255,69,0);\n    background-color: rgb(255,69,0);\n}\n`\nexport const List = styled.ul`\nmargin-bottom: 8px;\nmargin-left: 40px;\n`\nexport const Item = styled.li`\nfont-weight: 400;\nfont-size: 20px;\nline-height: 36px;\ncolor: #263238;\n`\n\nexport const StyledLink = styled(Link)`\n:hover{\n    color: rgb(255,69,0);\n}\n`","import {Form, Button, Input, List, Item, StyledLink} from './MoviesPage.styled';\nimport { fetchMoviesBySearch } from 'services/moviesAPI';\nimport {  useSearchParams, useLocation} from 'react-router-dom';\nimport {useState, useEffect, } from 'react'\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchText, setSearchText] = useState('')\n  const query = searchParams.get('query');\n  const location = useLocation()\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMoviesBySearch(query).then((res)=>setMovies(res.results));\n  }, [query]);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setSearchText(value);\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.currentTarget.elements.search.value });\n    e.currentTarget.reset();\n  };\n\n    return (\n        <>\n        <Form onSubmit={handleSubmit}>\n        <Input type='text' value={searchText} name=\"search\" onChange={handleChange}/>\n        <Button type=\"submit\" disabled={!searchText}>Search</Button>\n        </Form>\n        <List>{movies.map(({ id, title }) => (\n          <Item key={id}>\n            <StyledLink to={`${id}`} state={{from: location}}>\n              {title}\n            </StyledLink>\n          </Item>\n        ))}</List>\n        </>\n    )\n}\nexport default MoviesPage;","import axios from 'axios';\nconst KEY = '9016e2013ea080320685a54b31899448';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios(`trending/all/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios(`search/movie?query=${query}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\nexport async function fetchMoviesCast(id) {\n  const response = await axios(`movie/${id}/credits?`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\nexport async function fetchMoviesReview(id) {\n  const response = await axios(`movie/${id}/reviews?`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}"],"names":["Form","styled","Input","Button","List","Item","StyledLink","Link","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchText","setSearchText","query","get","location","useLocation","useEffect","fetchMoviesBySearch","then","res","results","onSubmit","e","preventDefault","currentTarget","elements","search","value","reset","type","name","onChange","target","disabled","map","id","title","to","state","from","KEY","fetchMovies","axios","params","api_key","response","data","fetchMoviesById","fetchMoviesCast","cast","fetchMoviesReview"],"sourceRoot":""}