{"version":3,"file":"static/js/779.d986872a.chunk.js","mappings":"uPACaA,EAAeC,EAAAA,GAAAA,GAAH,4IAQZC,EAAcD,EAAAA,GAAAA,GAAH,kEAIXE,EAAcF,EAAAA,GAAAA,GAAH,uIAOXG,EAAoBH,EAAAA,GAAAA,OAAH,8HAOjBI,EAAcJ,EAAAA,GAAAA,EAAH,8H,SCKxB,EA5BoB,WAClB,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAACC,GAAD,OAAON,EAAWM,EAAIC,QAAtB,GACjC,GAAE,CAACN,KAGF,8BACsB,IAAnBF,EAAQS,QACP,SAAChB,EAAD,yDAEA,SAACE,EAAD,UACGK,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,UAACjB,EAAD,YACE,UAACC,EAAD,sBAA4Be,MAC5B,SAACd,EAAD,UAAce,MAFEF,EAKrB,OAKV,C,+LC7BKG,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACkBC,EAAAA,EAAAA,GAAM,mBAAoB,CAC/CC,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,wFACkBN,EAAAA,EAAAA,GAAM,sBAAD,OAAuBM,GAAS,CAC1DL,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA+BZ,GAA/B,wFACkBK,EAAAA,EAAAA,GAAM,SAAD,OAAUL,GAAM,CAC1CM,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+Bb,GAA/B,wFACkBK,EAAAA,EAAAA,GAAM,SAAD,OAAUL,EAAV,aAAyB,CACnDM,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,KAAKK,MANhB,kEAQA,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCM,GAAjC,wFACkBK,EAAAA,EAAAA,GAAM,SAAD,OAAUL,EAAV,aAAyB,CACnDM,OAAQ,CACNC,QAASJ,KAHR,cACCK,EADD,yBAMEA,EAASC,MANX,kEApCPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from \"styled-components\";\nexport const ReviewsTitle = styled.h2`\nfont-weight: 500;\nfont-size: 24px;\nline-height: 36px;\ncolor: #263238;\nmargin-left: 40px;\nmargin-bottom: 20px;\n`\nexport const ReviewsList = styled.ul`\nmargin-left: 40px; \nmargin-right: 40px;\n`\nexport const ReviewsItem = styled.li`\nborder: 2px solid #8F95A5;\nborder-radius: 4px;\npadding: 10px 12px;\nmargin-top: 10px;\nmargin-bottom: 10px;\n`\nexport const ReviewsUpperTitle = styled.strong`\nfont-weight: 600;\nfont-size: 32px;\nline-height: 48px;\nmargin-bottom: 10px;\ncolor: rgb(255,69,0);\n`\nexport const ReviewsText = styled.p`\nfont-weight: 400;\nfont-size: 24px;\nline-height: 32px;\nmargin-bottom: 20px;\nmargin-right: 30px;\n\n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMoviesReview } from 'services/moviesAPI';\nimport {ReviewsTitle, ReviewsList, ReviewsItem, ReviewsUpperTitle, ReviewsText} from './Reviews.styled'\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    fetchMoviesReview(movieId).then((res)=>setReviews(res.results));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <ReviewsTitle>We don't have any reviews for this movie.</ReviewsTitle>\n      ) : (\n        <ReviewsList>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <ReviewsItem key={id}>\n                <ReviewsUpperTitle>Author: {author}</ReviewsUpperTitle>\n                <ReviewsText>{content}</ReviewsText>\n              </ReviewsItem>\n            );\n          })}\n        </ReviewsList>\n      )}\n    </>\n  );\n};\n\nexport default ReviewsPage;","import axios from 'axios';\nconst KEY = '9016e2013ea080320685a54b31899448';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchMovies() {\n  const response = await axios(`trending/all/day`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesBySearch(query) {\n  const response = await axios(`search/movie?query=${query}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\n\nexport async function fetchMoviesById(id) {\n  const response = await axios(`movie/${id}`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}\nexport async function fetchMoviesCast(id) {\n  const response = await axios(`movie/${id}/credits?`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data.cast;\n}\nexport async function fetchMoviesReview(id) {\n  const response = await axios(`movie/${id}/reviews?`, {\n    params: {\n      api_key: KEY,\n    },\n  });\n  return response.data;\n}"],"names":["ReviewsTitle","styled","ReviewsList","ReviewsItem","ReviewsUpperTitle","ReviewsText","useState","reviews","setReviews","movieId","useParams","useEffect","fetchMoviesReview","then","res","results","length","map","id","author","content","KEY","fetchMovies","axios","params","api_key","response","data","fetchMoviesBySearch","query","fetchMoviesById","fetchMoviesCast","cast"],"sourceRoot":""}